


```{r set_up}
# Se asigna el directorio donde esta el documento
tryCatch(
    # To set the default folder, it is going to be the folder where is the script
    {
        directory <- dirname(rstudioapi::getSourceEditorContext()$path)
        setwd(directory)
    },
    error = function(e) {

    }
)

# Se carga el archivo donde se encuentran todos los paquetes y funciones necesarias
source("./cod/set_up.R")

```



```{r data}
df_kidney <- read.xlsx("./data/FeatureEng_Data_KidneyDisease_1.xlsx")
df_kidney_numericas <- df_kidney %>%
    select(-class)
df_kidney_numericas <- as.data.frame(apply(df_kidney_numericas, 2, as.numeric))


```


```{r reduccion_dimension}
# Se procede a utilizar la funcion de
r_acp_kidney <- fn_acp(df = cbind(data.frame(Observacion = (1:nrow(df_kidney_numericas))), df_kidney_numericas), name_acp = "acp_kidney")



# Se guardan las tablas en formato de latex
print(xtable(r_acp_kidney$eigen_values, type = "latex", tabular.environment = "longtable"),
    include.rownames = FALSE, file = "./tablas/eigen_values.tex"
)

print(xtable(r_acp_kidney$df_correlations, type = "latex", tabular.environment = "longtable"),
    include.rownames = FALSE, file = "./tablas/correlaciones.tex"
)

print(xtable(r_acp_kidney$df_comunalities, type = "latex", tabular.environment = "longtable"),
    include.rownames = FALSE, file = "./tablas/comunalidades.tex"
)


ggsave(file = "./graficos/plot_elbow.pdf", r_acp_kidney$plot_elbow)
ggsave(file = "./graficos/plot_plano_pc.pdf", r_acp_kidney$plot_plano_pc)

ggsave(file = "./graficos/plot_c_correlaciones.pdf", r_acp_kidney$plot_c_correlaciones)

df_correlations <- (r_acp_kidney$df_correlations)
rownames(df_correlations) <- df_correlations[, 1]



plot_correlacion <- ggcorrplot(as.matrix(df_correlations[, -1]))

ggsave("./graficos/plot_corr.pdf", plot_correlacion)



plot_plano_pc_su <- r_acp_kidney$plot_plano_pc


plot_plano_pc_su[[1]] <- NULL

plot_plano_pc_su <- plot_plano_pc_su +
    geom_point()
```

```{r grafico_clases}
# Se hace un grafico con las distintas clases ya sea que tenga o no la enfermedad de los rinnones
df_pc <- r_acp_kidney$df_pc

df_pc %>%
    mutate(Clase = df_kidney$class) %>%
    ggplot(aes(
        x = PC1, y = PC2,
        color = Clase
    )) +
    geom_point() +
    geom_hline(yintercept = 0) +
    geom_vline(xintercept = 0) +
    coord_fixed() +
    theme_minimal() +
    # theme(text = element_text(size = 16)) +
    labs(x = "PC1", y = "PC2", caption = paste("Porcentaje de inercia:",
        r_acp_kidney$eigen_values$Porcentaje.de.inercia.acumulado[2],
        sep = " "
    )) +
    scale_color_manual(values = c("#ef8a62", "#67a9cf"))

ggsave(file = "./graficos/plot_pc1_pc2.pdf")

df_pc %>%
    mutate(Clase = df_kidney$class) %>%
    ggplot(aes(
        x = PC3, y = PC4,
        color = Clase
    )) +
    geom_point() +
    geom_hline(yintercept = 0) +
    geom_vline(xintercept = 0) +
    coord_fixed() +
    theme_minimal() +
    # theme(text = element_text(size = 16)) +
    labs(x = "PC3", y = "PC4", caption = paste("Porcentaje de inercia:",
        sum(r_acp_kidney$eigen_values$Porcentaje.de.inercia[3:4]),
        sep = " "
    )) +
    scale_color_manual(values = c("#ef8a62", "#67a9cf"))

ggsave(file = "./graficos/plot_pc3_pc4.pdf")

# df_pc %>%
#     mutate(Clase = df_kidney$class) %>%
#     ggplot(aes(x = PC5, y = PC6,
#         color = Clase
#     )) +
#         geom_point() +
#         geom_hline(yintercept = 0) +
#         geom_vline(xintercept = 0) +
#         coord_fixed() +
#         theme_minimal() +
#         # theme(text = element_text(size = 16)) +
#         labs(x = "PC5", y = "PC6", caption = paste("Porcentaje de inercia:",
#             sum(r_acp_kidney$eigen_values$Porcentaje.de.inercia[5:6]),
#             sep = " "
#         )) +
#         scale_color_manual(values = c("#ef8a62", "#67a9cf"))

```